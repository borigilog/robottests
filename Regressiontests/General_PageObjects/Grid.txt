*** Settings ***
Resource          ../General_Keywords/DataTypes.txt
Resource          ../General_Keywords/Elements.txt
Resource          ../General_Keywords/Collections.txt
Resource          ../General_Keywords/CommonlyUsed.txt
Library           robot.libraries.String
Library           Selenium2Library    run_on_failure=Nothing

*** KeyWords ***
Get List Elements Column Data
    [Arguments]    ${locator}    ${data_type}=string
    [Documentation]    Returns the texts of all WebElements matching provided locator converted into provided data_type
    ${result} =    Get Elements Text Data    ${locator}    ${data_type}
    [Return]    ${result}

Check Sorting Table By Columnname
    [Arguments]    ${table_id}    ${col_name}    ${data_type}=string    ${caseinsensitive}=${FALSE}
    [Documentation]    check sorting of table column
    [Tags]    Sorting
    ${col_name}=    Replace String    ${col_name}    $    ${EMPTY}    count=1
    ${locator}=    Set Variable    //div[contains(@class,'gridcontainer')]/table/tbody/tr/td/div[contains(@id,'${table_id}')][contains(@id,'${col_name}')]
    ${sort_col_id}=    Set Variable    //div[contains(@class,'gridheader lines')]/div/div/div[contains(@id,'${table_id}')][contains(@id,'${col_name}')]
    Click Element    ${sort_col_id}
    ${content_list} =    Get List Elements Column Data    ${locator}    ${data_type}
    List Should Be Ordered    ${content_list}    desc=false    caseinsensitive=${caseinsensitive}
    Click Element    ${sort_col_id}
    ${content_list} =    Get List Elements Column Data    ${locator}    ${data_type}
    List Should Be Ordered    ${content_list}    desc=true    caseinsensitive=${caseinsensitive}

Get Content Of Table Column
    [Arguments]    ${table_id}    ${col_name}    ${data_type}=string
    ${locator}=    Set Variable    //div[contains(@class,'gridcontainer')]/table/tbody/tr/td/div[contains(@id,'${table_id}')][contains(@id,'${col_name}')]
    ${col_name}=    Replace String    ${col_name}    $    ${EMPTY}    count=1
    ${content_list} =    Get List Elements Column Data    ${locator}    ${data_type}
    [Return]    ${content_list}

Get ElementID from List
    [Arguments]    ${element_id}    ${col_name}    ${value}
    [Documentation]    MM 29.03.2018
    ...    finde element einer liste statischer loop
    ${locator}    Set Variable    //div[contains(@id,'${element_id}')][contains(@id,'${col_name}')][contains(text(),'${value}')]
    ${id}=    Get ElementId From Table    ${locator}    ${value}
    Return From Keyword If    '${id}' == '${EMPTY}'    ${id}
    ${id}=    Replace String    ${id}    /${col_name}    ${EMPTY}    count=1
    [Return]    ${id}

Get ElementId From Table
    [Arguments]    ${locator}    ${value}
    [Documentation]    MM 01.04.2018 This way is good and fast, works with xpath
    #${strippedValue}    Get Stripped String    ${value}
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    Continue For Loop If    '${value}'!='${element.text}'
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    Return From Keyword    ${id}
    [Return]    ${EMPTY}

Check List has selection
    [Arguments]    ${element_id}
    [Documentation]    MM 29.03.2018
    ...    finde element einer liste statischer loop
    ${locator}    Set Variable    //tr[contains(@id,'${element_id}')]
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    ${class} =    Get Element Attribute    ${id}    class
    \    Return From Keyword If    '${class}'!='${EMPTY}'    ${TRUE}
    [Return]    ${FALSE}

Check Table Has Selection Class
    [Arguments]    ${locator}    ${class}
    [Documentation]    MM 01.04.2018 This way is good and fast, works with xpath
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    ${current_class} =    Get Element Attribute    ${id}    class
    \    Continue For Loop If    '${class}'!='${current_class}'
    \    Return From Keyword    ${TRUE}
    [Return]    ${FALSE}

Check List ElementId is selected
    [Arguments]    ${element_id}    ${class}    ${selected}=${TRUE}
    [Documentation]    MM 22.03.2018
    ...    list elemnet is selected
    [Tags]    General, Helper, List, Selection
    Check ElementId with class is visible    ${element_id}    ${class}    ${selected}
