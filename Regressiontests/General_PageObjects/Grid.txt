*** Settings ***
Resource          ../General_Keywords/DataTypes.txt
Resource          ../General_Keywords/Elements.txt
Resource          ../General_Keywords/Collections.txt
Resource          ../General_Keywords/CommonlyUsed.txt
Library           robot.libraries.String
Library           Selenium2Library    run_on_failure=Nothing

*** KeyWords ***
Get List Elements Column Data
    [Arguments]    ${locator}    ${data_type}=string
    [Documentation]    Returns the texts of all WebElements matching provided locator converted into provided data_type
    Run Keyword And Return    Get Elements Text Data    ${locator}    ${data_type}

Check Sorting Table By Columnname
    [Arguments]    ${table_id}    ${col_name}    ${data_type}=string    ${caseinsensitive}=${FALSE}
    [Documentation]    check sorting of table column
    ...
    ...    == Parameters ==
    ...    - ${table_id} = the general path of all table elements , e.g.: /$flow_main/$flow_content/return_list/0 \ = /$flow_main/$flow_content/return_list
    ...    - ${col_name} = columname to sort
    ...    - ${data_type} = data type, e.g.: string, number, int, datetime, bool, checkbox, optional
    ...    - ${caseinsensitive} = sort caseinsensitive, e.g.: true or false, optional
    ...    == Example ==
    ...    | = Keyword = | = table_id = | = col_name = | = data_type = | = caseinsensitive = | = Result = |
    ...    | Check Sorting Table By Columnname | /$flow_main/$flow_content/mandator_list | intName | | | sort list by name |
    [Tags]    Sorting
    ${locator}=    Get Table Data Location    ${table_id}    ${col_name}    ${data_type}
    ${sort_col_id}=    Get Table Header Location    ${table_id}    ${col_name}
    Click Element    ${sort_col_id}
    ${content_list} =    Get List Elements Column Data    ${locator}    ${data_type}
    List Should Be Ordered    ${content_list}    desc=false    caseinsensitive=${caseinsensitive}
    Click Element    ${sort_col_id}
    ${content_list} =    Get List Elements Column Data    ${locator}    ${data_type}
    List Should Be Ordered    ${content_list}    desc=true    caseinsensitive=${caseinsensitive}

Get Content Of Table Column
    [Arguments]    ${table_id}    ${col_name}    ${data_type}=string
    [Documentation]    MM 17.04.2018
    ...
    ...    == Parameters ==
    ...    - ${table_id} = the general path of all table elements , e.g.: /$flow_main/$flow_content/return_list/0 \ = /$flow_main/$flow_content/return_list
    ...    - ${col_name} = columname of table
    ...    - ${data_type} = data type, e.g.: string, number, int, datetime, bool, checkbox, optional
    ${locator}=    Get Table Data Location    ${table_id}    ${col_name}    ${data_type}
    Run Keyword And Return    Get List Elements Column Data    ${locator}    ${data_type}

Get ElementID from List
    [Arguments]    ${element_id}    ${col_name}    ${value}
    [Documentation]    MM 29.03.2018
    ...    finde element einer liste statischer loop
    ${locator}    Set Variable    //div[contains(@id,'${element_id}')][contains(@id,'${col_name}')]
    ${id}=    Get ElementId From Table    ${locator}    ${value}
    Return From Keyword If    '${id}' == '${EMPTY}'    ${id}
    Run Keyword And Return    Replace String    ${id}    /${col_name}    ${EMPTY}    count=1

Get ElementId From Table
    [Arguments]    ${locator}    ${value}
    [Documentation]    MM 01.04.2018 This way is good and fast, works with xpath
    #${strippedValue}    Get Stripped String    ${value}
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    Continue For Loop If    '${value}'!='${element.text}'
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    Return From Keyword    ${id}
    [Return]    ${EMPTY}

Check List has selection
    [Arguments]    ${element_id}
    [Documentation]    MM 29.03.2018
    ...    finde element einer liste statischer loop
    ${locator}    Set Variable    //tr[contains(@id,'${element_id}')]
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    ${class} =    Get Element Attribute    ${id}    class
    \    Return From Keyword If    '${class}'!='${EMPTY}'    ${TRUE}
    [Return]    ${FALSE}

Check Table Has Selection Class
    [Arguments]    ${locator}    ${class}
    [Documentation]    MM 01.04.2018 This way is good and fast, works with xpath
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    ${current_class} =    Get Element Attribute    ${id}    class
    \    Continue For Loop If    '${class}'!='${current_class}'
    \    Return From Keyword    ${TRUE}
    [Return]    ${FALSE}

Check List ElementId is selected
    [Arguments]    ${element_id}    ${class}    ${selected}=${TRUE}
    [Documentation]    MM 22.03.2018
    ...    list elemnet is selected
    [Tags]    General, Helper, List, Selection
    Check ElementId with class is visible    ${element_id}    ${class}    ${selected}

Get CheckboxIds With Status For Table Column
    [Arguments]    ${table_id}    ${id_col_name}    ${text_col_name}    ${selection}=${EMPTY}
    [Documentation]    MM 17.04.2018
    ...    get list of all checkboxes with their status
    ...
    ...    == Parameters ==
    ...    - ${table_id} = the general path of all table elements , e.g.: /$flow_main/$flow_content/return_list/0 \ = /$flow_main/$flow_content/return_list
    ...    - ${id_col_name} = columname with checkbox
    ...    - ${text_col_name} = columname with text
    ...    - ${selection} = all elements with certain selection, optional
    ...    == Example ==
    ...    | = Keyword = | = locator = | = id_col_name = | = text_col_name = | = selection = | = Result = |
    ...    | Get CheckboxIds With Status For Table Column | /$flow_main/$flow_content/$popover0/grid_filter_return_reason | chk_return_reason | txt_return_reason | | get list of all checkboxes with their status |
    ...    | Get CheckboxIds With Status For Table Column | /$flow_main/$flow_content/$popover0/grid_filter_return_reason | chk_return_reason | txt_return_reason | selection=true | get list of all selected checkboxes with their status |
    ...    | Get CheckboxIds With Status For Table Column | /$flow_main/$flow_content/$popover0/grid_filter_return_reason | chk_return_reason | txt_return_reason | selection=false | get list of all unselected checkboxes with their status |
    ${expected_selected}=    Is Truthy    ${selection}
    ${locator}=    Get Table Data Location    ${table_id}    ${id_col_name}    data_type=checkbox
    ${checkboxes}=    Create List
    @{webelements} =    Get WebElements    ${locator}
    : FOR    ${element}    IN    @{webelements}
    \    ${id}=    Set Variable    ${element.get_attribute('id')}
    \    ${selected}=    Get Selection of CheckBox    ${id}
    \    Continue For Loop If    '${selection}'!='${EMPTY}' and '${selected}'!='${expected_selected}'
    \    &{values}=    Create Dictionary    &{EMPTY}
    \    ${text_element_id}=    Replace String    ${id}    ${id_col_name}    ${text_col_name}    count=1
    \    ${text_element} =    Get WebElement    ${text_element_id}
    \    Set To Dictionary    ${values}    id=${id}    selected=${selected}    text=${text_element.text}
    \    Append To List    ${checkboxes}    ${values}
    [Return]    ${checkboxes}

Get Table Header Location
    [Arguments]    ${table_id}    ${col_name}
    [Documentation]    MM 18.04.2018
    ...
    ...    == Parameters ==
    ...    - ${table_id} = the general path of all table elements , e.g.: /$flow_main/$flow_content/return_list/0 \ = /$flow_main/$flow_content/return_list
    ...    - ${col_name} = columname of table
    ${col_name}=    Replace String    ${col_name}    $    ${EMPTY}    count=1
    [Return]    //div[contains(@class,'gridheader lines')]/div/div/div[contains(@id,'${table_id}')][contains(@id,'${col_name}')]

Get Table Data Location
    [Arguments]    ${table_id}    ${col_name}    ${data_type}=string
    [Documentation]    MM 18.04.2018
    ...
    ...    == Parameters ==
    ...    - ${table_id} = the general path of all table elements , e.g.: /$flow_main/$flow_content/return_list/0 \ = /$flow_main/$flow_content/return_list
    ...    - ${col_name} = columname of table
    ...    - ${data_type} = data type, e.g.: string, number, int, datetime, bool, checkbox, optional
    ${col_name}=    Replace String    ${col_name}    $    ${EMPTY}    count=1
    Return From Keyword If    '${data_type}' == 'checkbox'    //div[contains(@class,'gridcontainer')]/table/tbody/tr/td/span/input[contains(@id,'${table_id}')][contains(@id,'${col_name}')][contains(@type,'checkbox')]
    [Return]    //div[contains(@class,'gridcontainer')]/table/tbody/tr/td/div[contains(@id,'${table_id}')][contains(@id,'${col_name}')]
